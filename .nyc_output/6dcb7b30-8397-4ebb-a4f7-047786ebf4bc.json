{"C:\\projects\\redux-prim\\src\\index.ts":{"path":"C:\\projects\\redux-prim\\src\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":4},"end":{"line":4,"column":68}},"2":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"3":{"start":{"line":8,"column":17},"end":{"line":8,"column":27}},"4":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":17}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":16}},"7":{"start":{"line":15,"column":23},"end":{"line":15,"column":41}},"8":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"9":{"start":{"line":17,"column":8},"end":{"line":19,"column":23}},"10":{"start":{"line":18,"column":24},"end":{"line":18,"column":59}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":22}},"12":{"start":{"line":25,"column":8},"end":{"line":29,"column":10}},"13":{"start":{"line":31,"column":15},"end":{"line":31,"column":24}},"14":{"start":{"line":33,"column":8},"end":{"line":39,"column":10}},"15":{"start":{"line":34,"column":12},"end":{"line":38,"column":14}},"16":{"start":{"line":41,"column":4},"end":{"line":51,"column":6}},"17":{"start":{"line":44,"column":12},"end":{"line":48,"column":14}},"18":{"start":{"line":54,"column":17},"end":{"line":54,"column":28}},"19":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"20":{"start":{"line":56,"column":8},"end":{"line":56,"column":21}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":61}},"22":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"23":{"start":{"line":62,"column":8},"end":{"line":62,"column":66}},"24":{"start":{"line":64,"column":20},"end":{"line":64,"column":61}},"25":{"start":{"line":65,"column":20},"end":{"line":105,"column":5}},"26":{"start":{"line":67,"column":12},"end":{"line":68,"column":29}},"27":{"start":{"line":68,"column":16},"end":{"line":68,"column":29}},"28":{"start":{"line":69,"column":36},"end":{"line":69,"column":47}},"29":{"start":{"line":70,"column":30},"end":{"line":93,"column":13}},"30":{"start":{"line":72,"column":20},"end":{"line":72,"column":80}},"31":{"start":{"line":75,"column":20},"end":{"line":78,"column":21}},"32":{"start":{"line":76,"column":38},"end":{"line":76,"column":52}},"33":{"start":{"line":77,"column":24},"end":{"line":77,"column":46}},"34":{"start":{"line":79,"column":20},"end":{"line":79,"column":68}},"35":{"start":{"line":82,"column":36},"end":{"line":82,"column":50}},"36":{"start":{"line":83,"column":20},"end":{"line":91,"column":49}},"37":{"start":{"line":84,"column":24},"end":{"line":89,"column":25}},"38":{"start":{"line":85,"column":28},"end":{"line":85,"column":77}},"39":{"start":{"line":88,"column":28},"end":{"line":88,"column":50}},"40":{"start":{"line":90,"column":24},"end":{"line":90,"column":33}},"41":{"start":{"line":94,"column":12},"end":{"line":100,"column":13}},"42":{"start":{"line":95,"column":16},"end":{"line":99,"column":19}},"43":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"44":{"start":{"line":102,"column":16},"end":{"line":102,"column":130}},"45":{"start":{"line":106,"column":4},"end":{"line":106,"column":71}},"46":{"start":{"line":106,"column":52},"end":{"line":106,"column":68}},"47":{"start":{"line":108,"column":0},"end":{"line":108,"column":30}}},"fnMap":{"0":{"name":"getType","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":16}},"loc":{"start":{"line":3,"column":20},"end":{"line":5,"column":1}},"line":3},"1":{"name":"stringify","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":18}},"loc":{"start":{"line":7,"column":22},"end":{"line":13,"column":1}},"line":7},"2":{"name":"querify","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":16}},"loc":{"start":{"line":14,"column":26},"end":{"line":22,"column":1}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":17},"end":{"line":18,"column":18}},"loc":{"start":{"line":18,"column":24},"end":{"line":18,"column":59}},"line":18},"4":{"name":"updaterActionCreators","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":30}},"loc":{"start":{"line":23,"column":42},"end":{"line":52,"column":1}},"line":23},"5":{"name":"getMeta","decl":{"start":{"line":24,"column":13},"end":{"line":24,"column":20}},"loc":{"start":{"line":24,"column":34},"end":{"line":30,"column":5}},"line":24},"6":{"name":"updaterActionCreator","decl":{"start":{"line":32,"column":13},"end":{"line":32,"column":33}},"loc":{"start":{"line":32,"column":47},"end":{"line":40,"column":5}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":16}},"loc":{"start":{"line":33,"column":34},"end":{"line":39,"column":9}},"line":33},"8":{"name":"(anonymous_8)","decl":{"start":{"line":43,"column":18},"end":{"line":43,"column":19}},"loc":{"start":{"line":43,"column":37},"end":{"line":49,"column":9}},"line":43},"9":{"name":"isMatchedAction","decl":{"start":{"line":53,"column":9},"end":{"line":53,"column":24}},"loc":{"start":{"line":53,"column":44},"end":{"line":59,"column":1}},"line":53},"10":{"name":"createSlice","decl":{"start":{"line":60,"column":9},"end":{"line":60,"column":20}},"loc":{"start":{"line":60,"column":58},"end":{"line":107,"column":1}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":66,"column":21},"end":{"line":66,"column":22}},"loc":{"start":{"line":66,"column":60},"end":{"line":104,"column":9}},"line":66},"12":{"name":"(anonymous_12)","decl":{"start":{"line":71,"column":16},"end":{"line":71,"column":17}},"loc":{"start":{"line":71,"column":55},"end":{"line":73,"column":17}},"line":71},"13":{"name":"(anonymous_13)","decl":{"start":{"line":74,"column":16},"end":{"line":74,"column":17}},"loc":{"start":{"line":74,"column":44},"end":{"line":80,"column":17}},"line":74},"14":{"name":"(anonymous_14)","decl":{"start":{"line":81,"column":16},"end":{"line":81,"column":17}},"loc":{"start":{"line":81,"column":46},"end":{"line":92,"column":17}},"line":81},"15":{"name":"(anonymous_15)","decl":{"start":{"line":83,"column":55},"end":{"line":83,"column":56}},"loc":{"start":{"line":83,"column":73},"end":{"line":91,"column":21}},"line":83},"16":{"name":"(anonymous_16)","decl":{"start":{"line":106,"column":41},"end":{"line":106,"column":42}},"loc":{"start":{"line":106,"column":52},"end":{"line":106,"column":68}},"line":106}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},{"start":{"line":9,"column":4},"end":{"line":11,"column":5}}],"line":9},"1":{"loc":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},{"start":{"line":16,"column":4},"end":{"line":20,"column":5}}],"line":16},"2":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{"line":55,"column":4},"end":{"line":57,"column":5}}],"line":55},"3":{"loc":{"start":{"line":55,"column":8},"end":{"line":55,"column":75}},"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":13}},{"start":{"line":55,"column":17},"end":{"line":55,"column":75}}],"line":55},"4":{"loc":{"start":{"line":58,"column":11},"end":{"line":58,"column":60}},"type":"binary-expr","locations":[{"start":{"line":58,"column":11},"end":{"line":58,"column":28}},{"start":{"line":58,"column":32},"end":{"line":58,"column":60}}],"line":58},"5":{"loc":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},{"start":{"line":61,"column":4},"end":{"line":63,"column":5}}],"line":61},"6":{"loc":{"start":{"line":66,"column":22},"end":{"line":66,"column":47}},"type":"default-arg","locations":[{"start":{"line":66,"column":30},"end":{"line":66,"column":47}}],"line":66},"7":{"loc":{"start":{"line":67,"column":12},"end":{"line":68,"column":29}},"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":68,"column":29}},{"start":{"line":67,"column":12},"end":{"line":68,"column":29}}],"line":67},"8":{"loc":{"start":{"line":75,"column":20},"end":{"line":78,"column":21}},"type":"if","locations":[{"start":{"line":75,"column":20},"end":{"line":78,"column":21}},{"start":{"line":75,"column":20},"end":{"line":78,"column":21}}],"line":75},"9":{"loc":{"start":{"line":84,"column":24},"end":{"line":89,"column":25}},"type":"if","locations":[{"start":{"line":84,"column":24},"end":{"line":89,"column":25}},{"start":{"line":84,"column":24},"end":{"line":89,"column":25}}],"line":84},"10":{"loc":{"start":{"line":84,"column":28},"end":{"line":84,"column":98}},"type":"binary-expr","locations":[{"start":{"line":84,"column":28},"end":{"line":84,"column":58}},{"start":{"line":84,"column":62},"end":{"line":84,"column":98}}],"line":84},"11":{"loc":{"start":{"line":94,"column":12},"end":{"line":100,"column":13}},"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":100,"column":13}},{"start":{"line":94,"column":12},"end":{"line":100,"column":13}}],"line":94},"12":{"loc":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},{"start":{"line":101,"column":12},"end":{"line":103,"column":13}}],"line":101}},"s":{"0":1,"1":6,"2":1,"3":6,"4":6,"5":0,"6":6,"7":3,"8":3,"9":3,"10":3,"11":0,"12":3,"13":3,"14":6,"15":2,"16":3,"17":1,"18":1,"19":0,"20":0,"21":0,"22":3,"23":0,"24":3,"25":3,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":3,"46":0,"47":1},"f":{"0":6,"1":6,"2":3,"3":3,"4":3,"5":3,"6":6,"7":2,"8":1,"9":1,"10":3,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[0,6],"1":[3,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,3],"6":[1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"C:/projects/redux-prim/src/index.ts","sources":["C:/projects/redux-prim/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["function getType(x: any): string {\n  return Object.prototype.toString.call(x).replace('object ', '');\n}\ntype Dictionary = { [key: string]: any }\ntype PrimMeta<T> = { isPrimAction: boolean, namespace: string, updaterName: keyof PrimUpdaterImpls<T> };\ntype PrimAction<T> = { type: string, payload: any, meta?: PrimMeta<T>, error?: any }\n\ninterface UpdateParam<T extends Dictionary> {\n  state: T,\n  getDefaultState: Function,\n  action: PrimAction<T>\n}\ninterface PrimUpdaterImpls<T extends Dictionary> {\n  initState: (p: UpdateParam<T>) => Dictionary,\n  setState: (p: UpdateParam<T>) => Dictionary,\n  mergeState: (p: UpdateParam<T>) => Dictionary\n}\ninterface PrimUpdaters<T extends Dictionary> {\n  initState: (p?: Dictionary) => PrimAction<T>,\n  setState: (p: Dictionary | ((s: Readonly<T>) => Dictionary)) => PrimAction<T>,\n  mergeState: (p: Dictionary) => PrimAction<T>\n}\nconst _actionTypePrefix = '@prim'\n\nfunction stringify(x: any) {\n  const type = getType(x);\n  if (['[Number]', '[Boolean]', '[Undefined]'].indexOf(type) > 0) {\n    return x\n  }\n  return type\n}\n\nfunction querify(payload: Dictionary) {\n  const payloadStr = stringify(payload)\n  if (payloadStr === '[Object]') {\n    return Object.keys(payload)\n      .map(key => `${key}=${stringify(payload[key])}`)\n      .join('&')\n  }\n\n  return payloadStr\n}\n\nfunction updaterActionCreators<T>(namespace: string): PrimUpdaters<T> {\n  function getMeta(updaterName: keyof PrimUpdaterImpls<T>): PrimMeta<T> {\n    return {\n      isPrimAction: true,\n      namespace,\n      updaterName\n    }\n  }\n  const ns = namespace\n\n  function updaterActionCreator(updaterName: keyof PrimUpdaterImpls<T>) {\n    return function (payload: Dictionary): PrimAction<T> {\n      return {\n        type: `${_actionTypePrefix}/${ns}/${updaterName}/?${querify(payload)}`,\n        payload,\n        meta: getMeta(updaterName)\n      }\n    }\n  }\n\n  return {\n    initState: updaterActionCreator('initState'),\n    setState: function (payload: Dictionary | ((state: T) => Dictionary)): PrimAction<T> {\n      return {\n        type: `${_actionTypePrefix}/${ns}/${'setState'}/?${querify(payload)}`,\n        payload,\n        meta: getMeta('setState')\n      }\n    },\n    mergeState: updaterActionCreator('mergeState')\n  }\n}\n\n\nfunction isMatchedAction<T>(action: PrimAction<T>, namespace: string) {\n  const meta = action.meta\n  if (!meta || Object.prototype.toString.call(meta) !== '[object Object]') {\n    return false\n  }\n  return meta.isPrimAction && meta.namespace === namespace\n}\n\n\ntype ThunkCallback<T> = (dispatch: ((action: PrimAction<T>) => void), getState: () => T) => void;\nexport default function createSlice<T extends { [key: string]: (...args: any) => PrimAction<P> | ThunkCallback<P> }, P extends Dictionary>(\n  namespace: string,\n  getDefaultState: () => P,\n  creator: (updaters: PrimUpdaters<P>) => T\n) {\n  if (typeof creator !== 'function') {\n    throw new Error('Expected the creator to be a function.');\n  }\n\n  const actions = creator(updaterActionCreators<P>(namespace));\n\n  const reducer = {\n    [namespace]: (state: P = getDefaultState(), action?: PrimAction<P>): any => {\n      if (!isMatchedAction(action, namespace)) return state\n\n      const { updaterName } = action.meta as PrimMeta<P>;\n\n      const _updaters: PrimUpdaterImpls<P> = {\n        initState({ action, getDefaultState }) {\n          return Object.assign({}, getDefaultState(), action.payload);\n        },\n        setState({ state, action }) {\n          if (typeof action.payload === 'function') {\n            let reducer = action.payload as ((s: P) => Dictionary);\n            return reducer(state);\n          }\n          return Object.assign({}, state, action.payload);\n        },\n        mergeState({ state, action }) {\n          const payload = action.payload\n          return Object.keys(payload).reduce(function (s: Dictionary, key: string) {\n            if (getType(s[key]) === '[Object]' && getType(payload[key]) === '[Object]') {\n              s[key] = Object.assign({}, s[key], payload[key])\n            } else {\n              s[key] = payload[key]\n            }\n            return s\n          }, Object.assign({}, state))\n        }\n      }\n      if (updaterName) {\n        return _updaters[updaterName]({\n          state,\n          action,\n          getDefaultState\n        })\n      }\n      if (!reducer) {\n        throw new Error(\n          `reducer function is not defined in createPrimReducer(\"${namespace}\", getDefaultState, reducer)`\n        )\n      }\n    }\n  };\n\n  return { actions, reducer, selector: (state: Dictionary): P => state[namespace] };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cc538445f9dac6244056f9e49e3322ae1995f928"}}